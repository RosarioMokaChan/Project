/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package foodmadeeasy.gui;

import foodmadeeasy.connection.ConnectionHandlerIngredient;
import foodmadeeasy.generic.Ingredient;
import java.awt.Color;
import java.awt.Container;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author chris
 */
public class AddIngredient extends javax.swing.JFrame {

    private boolean edit;
    private Ingredient editIngredient;
    private int editId;
    
    private ConnectionHandlerIngredient ingredientHandler = new ConnectionHandlerIngredient();
    
    /**
     * Creates new form AddIngredient
     */
    public AddIngredient() {
        initComponents();
    }
    
    /**
     * Creates new form AddIngredient
     * @param isEdit - boolean to state if form adds ingredient, or edits existing ingredient
     * @param ingred - ingredient to edit
     */
    public AddIngredient(boolean isEdit, Ingredient ingred) {
        initComponents();
        edit = isEdit;
        this.editIngredient = ingred;
        setup();
    }

    private void setup(){
        Container a = this.getContentPane();
        a.setBackground(Color.white);
        txtIngredientName.setText("");
        lblError.setText(" ");
        this.getRootPane().setDefaultButton(btnAddIngredient);
        if(edit) editInit();
    }
    
    private void editInit(){
        editId = editIngredient.getId();//here just to store in this class, below is to check it still exists
        ArrayList<Ingredient> allIngredients = ingredientHandler.getAllIngredients();
        //loop through all recipes
        for(int i = 0; i < allIngredients.size(); i++){
            //if the current ingredient is the one passed through
            if(allIngredients.get(i).getId() == editIngredient.getId()){
                //if it is actually an ingredient
                if(editIngredient!=null){
                    txtIngredientName.setText(editIngredient.getName());
                }
            }
        }
    }
    
    private boolean addTheIngredient(){
        Ingredient newIngredient = new Ingredient(txtIngredientName.getText());
        boolean added = ingredientHandler.addIngredient(newIngredient);
        return added;
    }
    
    private boolean editTheIngredient(){
        Ingredient newIngredient = new Ingredient(editId, txtIngredientName.getText());
        boolean edited = ingredientHandler.editIngredient(newIngredient);
        return edited;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtIngredientName = new javax.swing.JTextField();
        btnAddIngredient = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingredient Name:");

        txtIngredientName.setFocusCycleRoot(true);
        txtIngredientName.setNextFocusableComponent(btnAddIngredient);

        btnAddIngredient.setText("Save Ingredient");
        btnAddIngredient.setNextFocusableComponent(btnCancel);
        btnAddIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddIngredientActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setNextFocusableComponent(txtIngredientName);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblError.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(lblError))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIngredientName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddIngredient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIngredientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnAddIngredient))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Segoe Print", 0, 24)); // NOI18N
        jLabel2.setText("Food Made Easy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddIngredientActionPerformed
        if(txtIngredientName.getText().isEmpty()){
            lblError.setText("Please enter an ingredient name");
        }else{
            if(edit){//edit the ingredient
                int dialogResult = JOptionPane.showConfirmDialog(this, "You are about to change the ingredient to have the details:\r\n\nName: " + txtIngredientName.getText() + "\r\n\r\nAre you sure you wish to save the changes to this ingredient?", "Edit Ingredient", JOptionPane.YES_NO_OPTION);
                if(dialogResult == 0) {//yes
                    //check if the name of the edited ingredient clashes with another ingredient
                    ArrayList<Ingredient> allIngredients = ingredientHandler.getAllIngredients();
                    for(int i = 0; i < allIngredients.size(); i++){
                        //if the name is the same as another ingredient and the id is the same, then we are looking at the ingredient being edited,
                        //otherwise if the id is different then we're looking at a different ingredient and shouldn't be allowed to have the same name
                        if(txtIngredientName.getText().equalsIgnoreCase(allIngredients.get(i).getName()) && allIngredients.get(i).getId() != editId){
                            JOptionPane.showMessageDialog(this, "The Ingredient '" + txtIngredientName.getText() + "' already exists, please either change the ingredient name or edit the ingredient by selecting it from the list on the control panel.", "Ingredient already exists", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                    boolean result = editTheIngredient();
                    if(result){
                        this.dispose();
                    }else{
                        JOptionPane.showMessageDialog(this, "Something went wrong when trying to edit the ingredient: " + txtIngredientName.getText() + "\r\n\nPlease try again later.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else{//add the ingredient
                int dialogResult = JOptionPane.showConfirmDialog(this, "You are about to add the ingredient with the details:\r\n\nName: " + txtIngredientName.getText() + "\r\n\r\nAre you sure you wish to add this ingredient?", "Add Ingredient", JOptionPane.YES_NO_OPTION);
                if(dialogResult == 0) {//yes
                    //check if this ingredient already exists
                    ArrayList<Ingredient> allIngredients = ingredientHandler.getAllIngredients();
                    for(int i = 0; i < allIngredients.size(); i++){
                        if(txtIngredientName.getText().equalsIgnoreCase(allIngredients.get(i).getName())){
                            JOptionPane.showMessageDialog(this, "The Ingredient '" + txtIngredientName.getText() + "' already exists, please either change the ingredient name or edit the ingredient by selecting it from the list on the control panel.", "Ingredient already exists", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                    boolean result = addTheIngredient();
                    if(result){
                        int dialogResultAdded = JOptionPane.showConfirmDialog(this, "The ingredient named: " + txtIngredientName.getText() + ",\r\n has been added successfully. \r\n\nDo you wish to add another ingredient?", "Success", JOptionPane.YES_NO_OPTION);
                        if(dialogResultAdded == 0) {//yes
                            setup();
                        }else{//no
                            this.dispose();
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Something went wrong when trying to add the ingredient: " + txtIngredientName.getText() + "\r\n\nPlease try again later.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAddIngredientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddIngredient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddIngredient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddIngredient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddIngredient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddIngredient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddIngredient;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblError;
    private javax.swing.JTextField txtIngredientName;
    // End of variables declaration//GEN-END:variables
}
