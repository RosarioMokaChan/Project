/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package foodmadeeasy.gui;

import foodmadeeasy.connection.ConnectionHandlerAdmin;
import foodmadeeasy.generic.AdminUser;
import foodmadeeasy.generic.EncryptDecrypt;
import java.awt.Color;
import java.awt.Container;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author chris
 */
public class AddUser extends javax.swing.JFrame {

    private boolean edit;
    private String username;
    
    private ConnectionHandlerAdmin adminHandler = new ConnectionHandlerAdmin();
    
    /**
     * Creates new form AddUser
     */
    public AddUser() {
        initComponents();
    }
    
    /**
     * Creates new form AddUser
     * @param isEdit - boolean to see if user is being added or edited
     * @param username - name of user being edited
     */
    public AddUser(boolean isEdit, String username) {
        initComponents();
        this.edit = isEdit;
        this.username = username;
        setup();
    }
    
    private void setup(){
        Container a = this.getContentPane();
        a.setBackground(Color.white);
        txtUsername.setText("");
        pfPassword.setText("");
        pfConfirmPassword.setText("");
        this.getRootPane().setDefaultButton(btnAddUser);
        if(edit) editInit();
    }
    
    private void editInit(){
        ArrayList<AdminUser> allAdmins = adminHandler.getAdmin(null);
        //loop through all users
        for(int i = 0; i < allAdmins.size(); i++){
            //if the current user is the one passed through
            if(allAdmins.get(i).getUsername().equals(username)){
                //get the details of the user and decrypt the password so that it can be edited
                txtUsername.setText(allAdmins.get(i).getUsername());
                String decryptedPassword = EncryptDecrypt.decryptPassword(allAdmins.get(i).getPassword(), allAdmins.get(i).getKey());
                pfPassword.setText(decryptedPassword);
                pfConfirmPassword.setText(decryptedPassword);
            }
        }
    }
    
    private boolean addTheUser(){
        boolean added = adminHandler.createAdmin(txtUsername.getText(), String.valueOf(pfPassword.getPassword()));
        return added;
    }
    
    private boolean editTheUser(){
        ArrayList<byte[]> encryptedPassword = EncryptDecrypt.encryptPassword(String.valueOf(pfPassword.getPassword()));
        AdminUser newUser = new AdminUser(txtUsername.getText(), encryptedPassword.get(0), encryptedPassword.get(1));
        boolean edited = adminHandler.editAdmin(username, newUser);
        return edited;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        lblUsername = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pfPassword = new javax.swing.JPasswordField();
        pfConfirmPassword = new javax.swing.JPasswordField();
        btnAddUser = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUsername.setText("Username:");

        jLabel1.setText("Password:");

        jLabel2.setText("Re-enter Password:");

        btnAddUser.setText("Save User");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblError.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(lblUsername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(pfPassword)
                            .addComponent(pfConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 187, Short.MAX_VALUE)
                        .addComponent(btnAddUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(lblError)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pfConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUser)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Segoe Print", 0, 24)); // NOI18N
        jLabel3.setText("Food Made Easy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        if(txtUsername.getText().isEmpty()){
            lblError.setText("Please enter a name for the user");
        }else if(pfPassword.getPassword().length == 0){//no .isEmpty method for passwordField
            lblError.setText("Please enter a password");
        }else if(pfConfirmPassword.getPassword().length == 0){
            lblError.setText("Please re-enter the password");
        }else{
            String p1 = String.valueOf(pfPassword.getPassword());
            String p2 = String.valueOf(pfConfirmPassword.getPassword());
            if(p1.equals(p2)){//check if the two passwords are the same
                if(edit){//edit the ingredient
                    int dialogResult = JOptionPane.showConfirmDialog(this, "You are about to update the user details for: " + username + "\r\n\nAre you sure you wish to save the changes to this user?", "Edit User", JOptionPane.YES_NO_OPTION);
                    if(dialogResult == 0) {//yes
                        //check if the name of the edited ingredient clashes with another ingredient
                        ArrayList<AdminUser> allAdmins = adminHandler.getAdmin(null);
                        for(int i = 0; i < allAdmins.size(); i++){
                            //if the name is the same as another user then we could be looking at the user we're editing,
                            //however if the name is also not the same as the orginal name of this user, then the user with this updated name exists
                            if(txtUsername.getText().equalsIgnoreCase(allAdmins.get(i).getUsername()) && !txtUsername.getText().equalsIgnoreCase(username)){
                                JOptionPane.showMessageDialog(this, "The user '" + txtUsername.getText() + "' already exists, please either change the username or edit the user by selecting it from the list on the control panel.", "User already exists", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }
                        boolean result = editTheUser();
                        if(result){
                            this.dispose();
                        }else{
                            JOptionPane.showMessageDialog(this, "Something went wrong when trying to edit the user: " + txtUsername.getText() + "\r\n\nPlease try again later.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }else{//add the user
                    int dialogResult = JOptionPane.showConfirmDialog(this, "You are about to add the user: " + txtUsername.getText() + "\r\n\nAre you sure you wish to add this user?", "Add User", JOptionPane.YES_NO_OPTION);
                    if(dialogResult == 0) {//yes
                        //check if this user already exists
                        ArrayList<AdminUser> allAdmins = adminHandler.getAdmin(null);
                        for(int i = 0; i < allAdmins.size(); i++){
                            if(txtUsername.getText().equalsIgnoreCase(allAdmins.get(i).getUsername())){
                                JOptionPane.showMessageDialog(this, "The user '" + txtUsername.getText() + "' already exists, please either change the username or edit the user by selecting it from the list on the control panel.", "User already exists", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }
                        boolean result = addTheUser();
                        if(result){
                            int dialogResultAdded = JOptionPane.showConfirmDialog(this, "The user named: " + txtUsername.getText() + ",\r\n has been added successfully. \r\n\nDo you wish to add another user?", "Success", JOptionPane.YES_NO_OPTION);
                            if(dialogResultAdded == 0) {//yes
                                setup();
                            }else{//no
                                this.dispose();
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Something went wrong when trying to add the user: " + txtUsername.getText() + "\r\n\nPlease try again later.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }else{
                lblError.setText("The passwords do not match");
            }
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pfConfirmPassword;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
